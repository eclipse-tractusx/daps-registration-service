openapi: 3.0.3
info:
  title: DAPS Registration Service API
  description: An admin interface to the Omeijdn DAPS Server
  version: 1.0.4
servers:
  - url: /api/v1
paths:
  /daps:
    post:
      summary: Creates a Client at DAPS
      operationId: createClientPost
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                clientName:
                  type: string
                  description: Name of a client we create a record for
                securityProfile:
                  type: string
                  description: The profile. Default value is idsc:BASE_SECURITY_PROFILE
                referringConnector:
                  type: string
                  format: uri
                  description: URL of a connector with BPN at the end
                file:
                  type: string
                  format: binary
                  description: Certificate of a Connector in PEM format
              required:
                - clientName
                - referringConnector
                - file
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                additionalProperties: { }
        '400':
          description: certificate problem (if was tampered), 
            attributes did not pass validation (wrong character or too long)
        '401':
          description: not authorized
        '409':
          description: certificate was already used for the registration
        '500':
          description: on any unexpected service problem
  /daps/{client_id}:
    get:
      summary: Gets a client by ID.
      operationId: getClientGet
      security:
        - bearerAuth: [ ]
      parameters:
        - name: client_id
          in: path
          description: Client ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Client details
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
        '401':
          description: not authorized
        '404':
          description: client not found
        '500':
          description: on any unexpected service problem
    put:
      summary: Updates a client by ID.
      operationId: updateClientPut
      security:
        - bearerAuth: [ ]
      parameters:
        - name: client_id
          in: path
          description: Client ID
          required: true
          schema:
            type: string
        - name: newAttr
          in: query
          description: Attributes to add
          required: true
          schema:
            type: object
            additionalProperties:
              type: string
      responses:
        '200':
          description: Client updated
        '400':
          description: attributes did not pass validation (wrong character or too long)
        '401':
          description: not authorized
        '500':
          description: on any unexpected service problem
    delete:
      summary: Delete a client by ID.
      operationId: deleteClientDelete
      security:
        - bearerAuth: [ ]
      parameters:
        - name: client_id
          in: path
          description: Client ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Client deleted
        '401':
          description: not authorized
        '500':
          description: on any unexpected service problem
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - bearerAuth: []